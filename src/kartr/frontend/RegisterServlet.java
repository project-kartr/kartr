package kartr.frontend;

import jakarta.servlet.*;
import jakarta.servlet.annotation.*;
import jakarta.servlet.http.*;
import java.io.*;
import java.security.NoSuchAlgorithmException;
import java.security.spec.InvalidKeySpecException;
import java.sql.Connection;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import kartr.model.*;
import kartr.services.*;

/* RegisterServlet.java
 *
 * This servlet handles the registration process of the kartr-webapp
 * It validates the given user input, persists the data in the database
 * and generates a confirmation email that is then being sent to the user
 */

@WebServlet("/public/register")
@MultipartConfig
public class RegisterServlet extends HttpServlet {

  // RegEx used to validate email addresses
  final Pattern VALID_EMAIL_ADDRESS_REGEX =
      Pattern.compile(
          "^[a-zA-Z0-9_!#$%&'*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$", Pattern.CASE_INSENSITIVE);

  // doPost()-Method of the HttpServlet class
  // This method is being called by the server when a POST request is received
  protected void doPost(HttpServletRequest request, HttpServletResponse response)
      throws IOException {
    ResponseHelper responseHelper = new ResponseHelper(response);
    // Get all of the request-parameters and sanitize them to avoid malicious content
    String email = request.getParameter("email");
    String displayName = SanitizeHelper.sanitize(request.getParameter("displayname"));
    String password = request.getParameter("password");
    String password_hash = "";
    String path = "https://" + request.getServerName() + request.getContextPath();
    String registerToken = "";
    boolean isEmailValid = true;
    Account acc = null;
    response.setContentType("application/json");

    // Validate email address
    if (!validate(email)) {
      responseHelper.createError("no valid email provided", true);
      isEmailValid = false;
    }

    // Hash password
    if (password != null) {
      try {
        password_hash = PasswordHashingService.generatePasswordHash(password);
      } catch (InvalidKeySpecException | NoSuchAlgorithmException e) {
        e.printStackTrace();
        responseHelper.createError("cannot create password hash", false);
      }
    } else {
      responseHelper.createError("no password provided", true);
    }

    // Create new account object if all necessary data is both present and valid
    if (displayName != null && !displayName.isEmpty()) {
      if (isEmailValid && password_hash != null && !password_hash.isEmpty()) {
        acc = new Account(email, password_hash, displayName);
      }
    } else { // no else: error already created above
      responseHelper.createError("no displayname provided", true);
    }

    // Get database connection and insert account data into database
    // registerToken contains a String consisting of the account ID and
    // register token generated by the database as well as the current time
    if (!responseHelper.hasErrors() && acc != null) {
      Connection conn = DatabaseConnectionFacade.getConnection();
      registerToken = PersistenceLayer.insertAccount(conn, acc);
      DatabaseConnectionFacade.releaseConnection(conn);
    }

    // If the insert was successful, prepare a confirmation email to the user
    // and send it
    if (!responseHelper.hasErrors()) {
      if (registerToken != null && registerToken.length() > 0) {
        String emailContent = getEmailContent(registerToken, displayName, path);
        EmailSendingFacade.sendMail(
            emailContent, "Bestätigung Ihrer Registrierung bei Kartr", email, "demo@example.com");
      } else {
        responseHelper.createError("could not create account", true);
      }
    }

    // Send error messages if there are any, otherwise send success message
    if (responseHelper.hasErrors()) {
      responseHelper.sendErrors();
    } else {
      responseHelper.sendResponse("description", "account created");
    }
  }

  // Method used to validate email addresses
  public boolean validate(String emailStr) {
    if (emailStr != null) {
      Matcher matcher = VALID_EMAIL_ADDRESS_REGEX.matcher(emailStr);
      return matcher.find();
    } else {
      return false;
    }
  }

  // Method used to generate the content of the confirmation email sent to the user
  public String getEmailContent(String registerToken, String name, String path) {
    String content =
        "Hallo "
            + name
            + ",\nvielen Dank für deine Registrierung bei Kartr.\n"
            + "Bestätige bitte deine Registrierung, indem du auf den folgenden Link klickst: \n"
            + path
            + "/public/confirm?token="
            + registerToken
            + "\n\n"
            + "Hast du diese Registrierung nicht durchgeführt, dann ignoriere bitte diese"
            + " Nachricht.\n"
            + "Beste Grüße\n\n"
            + "Dein Kartr-Team";

    return content;
  }
}
